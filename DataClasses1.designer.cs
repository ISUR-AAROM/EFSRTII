#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoFinal
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ProyectoFinal")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCabeceraMovimiento(CabeceraMovimiento instance);
    partial void UpdateCabeceraMovimiento(CabeceraMovimiento instance);
    partial void DeleteCabeceraMovimiento(CabeceraMovimiento instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertDetalleMovimiento(DetalleMovimiento instance);
    partial void UpdateDetalleMovimiento(DetalleMovimiento instance);
    partial void DeleteDetalleMovimiento(DetalleMovimiento instance);
    partial void InsertProducto(Producto instance);
    partial void UpdateProducto(Producto instance);
    partial void DeleteProducto(Producto instance);
    partial void InsertProveedor(Proveedor instance);
    partial void UpdateProveedor(Proveedor instance);
    partial void DeleteProveedor(Proveedor instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::ProyectoFinal.Properties.Settings.Default.ProyectoFinalConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CabeceraMovimiento> CabeceraMovimiento
		{
			get
			{
				return this.GetTable<CabeceraMovimiento>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Cliente
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<DetalleMovimiento> DetalleMovimiento
		{
			get
			{
				return this.GetTable<DetalleMovimiento>();
			}
		}
		
		public System.Data.Linq.Table<Producto> Producto
		{
			get
			{
				return this.GetTable<Producto>();
			}
		}
		
		public System.Data.Linq.Table<Proveedor> Proveedor
		{
			get
			{
				return this.GetTable<Proveedor>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CabeceraMovimiento")]
	public partial class CabeceraMovimiento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CAB_ID;
		
		private int _CAB_CLIENTE_ID;
		
		private System.DateTime _CAB_FECHA;
		
		private string _CAB_TIPO;
		
		private string _CAB_MOTIVO;
		
		private System.Nullable<int> _PROV_ID;
		
		private EntitySet<DetalleMovimiento> _DetalleMovimiento;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Proveedor> _Proveedor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCAB_IDChanging(int value);
    partial void OnCAB_IDChanged();
    partial void OnCAB_CLIENTE_IDChanging(int value);
    partial void OnCAB_CLIENTE_IDChanged();
    partial void OnCAB_FECHAChanging(System.DateTime value);
    partial void OnCAB_FECHAChanged();
    partial void OnCAB_TIPOChanging(string value);
    partial void OnCAB_TIPOChanged();
    partial void OnCAB_MOTIVOChanging(string value);
    partial void OnCAB_MOTIVOChanged();
    partial void OnPROV_IDChanging(System.Nullable<int> value);
    partial void OnPROV_IDChanged();
    #endregion
		
		public CabeceraMovimiento()
		{
			this._DetalleMovimiento = new EntitySet<DetalleMovimiento>(new Action<DetalleMovimiento>(this.attach_DetalleMovimiento), new Action<DetalleMovimiento>(this.detach_DetalleMovimiento));
			this._Cliente = default(EntityRef<Cliente>);
			this._Proveedor = default(EntityRef<Proveedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAB_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CAB_ID
		{
			get
			{
				return this._CAB_ID;
			}
			set
			{
				if ((this._CAB_ID != value))
				{
					this.OnCAB_IDChanging(value);
					this.SendPropertyChanging();
					this._CAB_ID = value;
					this.SendPropertyChanged("CAB_ID");
					this.OnCAB_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAB_CLIENTE_ID", DbType="Int NOT NULL")]
		public int CAB_CLIENTE_ID
		{
			get
			{
				return this._CAB_CLIENTE_ID;
			}
			set
			{
				if ((this._CAB_CLIENTE_ID != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCAB_CLIENTE_IDChanging(value);
					this.SendPropertyChanging();
					this._CAB_CLIENTE_ID = value;
					this.SendPropertyChanged("CAB_CLIENTE_ID");
					this.OnCAB_CLIENTE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAB_FECHA", DbType="Date NOT NULL")]
		public System.DateTime CAB_FECHA
		{
			get
			{
				return this._CAB_FECHA;
			}
			set
			{
				if ((this._CAB_FECHA != value))
				{
					this.OnCAB_FECHAChanging(value);
					this.SendPropertyChanging();
					this._CAB_FECHA = value;
					this.SendPropertyChanged("CAB_FECHA");
					this.OnCAB_FECHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAB_TIPO", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CAB_TIPO
		{
			get
			{
				return this._CAB_TIPO;
			}
			set
			{
				if ((this._CAB_TIPO != value))
				{
					this.OnCAB_TIPOChanging(value);
					this.SendPropertyChanging();
					this._CAB_TIPO = value;
					this.SendPropertyChanged("CAB_TIPO");
					this.OnCAB_TIPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAB_MOTIVO", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CAB_MOTIVO
		{
			get
			{
				return this._CAB_MOTIVO;
			}
			set
			{
				if ((this._CAB_MOTIVO != value))
				{
					this.OnCAB_MOTIVOChanging(value);
					this.SendPropertyChanging();
					this._CAB_MOTIVO = value;
					this.SendPropertyChanged("CAB_MOTIVO");
					this.OnCAB_MOTIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROV_ID", DbType="Int")]
		public System.Nullable<int> PROV_ID
		{
			get
			{
				return this._PROV_ID;
			}
			set
			{
				if ((this._PROV_ID != value))
				{
					if (this._Proveedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPROV_IDChanging(value);
					this.SendPropertyChanging();
					this._PROV_ID = value;
					this.SendPropertyChanged("PROV_ID");
					this.OnPROV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabeceraMovimiento_DetalleMovimiento", Storage="_DetalleMovimiento", ThisKey="CAB_ID", OtherKey="CAB_ID")]
		public EntitySet<DetalleMovimiento> DetalleMovimiento
		{
			get
			{
				return this._DetalleMovimiento;
			}
			set
			{
				this._DetalleMovimiento.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_CabeceraMovimiento", Storage="_Cliente", ThisKey="CAB_CLIENTE_ID", OtherKey="CLIENTE_ID", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.CabeceraMovimiento.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.CabeceraMovimiento.Add(this);
						this._CAB_CLIENTE_ID = value.CLIENTE_ID;
					}
					else
					{
						this._CAB_CLIENTE_ID = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_CabeceraMovimiento", Storage="_Proveedor", ThisKey="PROV_ID", OtherKey="PROV_ID", IsForeignKey=true)]
		public Proveedor Proveedor
		{
			get
			{
				return this._Proveedor.Entity;
			}
			set
			{
				Proveedor previousValue = this._Proveedor.Entity;
				if (((previousValue != value) 
							|| (this._Proveedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedor.Entity = null;
						previousValue.CabeceraMovimiento.Remove(this);
					}
					this._Proveedor.Entity = value;
					if ((value != null))
					{
						value.CabeceraMovimiento.Add(this);
						this._PROV_ID = value.PROV_ID;
					}
					else
					{
						this._PROV_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Proveedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleMovimiento(DetalleMovimiento entity)
		{
			this.SendPropertyChanging();
			entity.CabeceraMovimiento = this;
		}
		
		private void detach_DetalleMovimiento(DetalleMovimiento entity)
		{
			this.SendPropertyChanging();
			entity.CabeceraMovimiento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CLIENTE_ID;
		
		private string _CLIENTE_NOMBRE;
		
		private string _CLIENTE_CONTACTO;
		
		private EntitySet<CabeceraMovimiento> _CabeceraMovimiento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCLIENTE_IDChanging(int value);
    partial void OnCLIENTE_IDChanged();
    partial void OnCLIENTE_NOMBREChanging(string value);
    partial void OnCLIENTE_NOMBREChanged();
    partial void OnCLIENTE_CONTACTOChanging(string value);
    partial void OnCLIENTE_CONTACTOChanged();
    #endregion
		
		public Cliente()
		{
			this._CabeceraMovimiento = new EntitySet<CabeceraMovimiento>(new Action<CabeceraMovimiento>(this.attach_CabeceraMovimiento), new Action<CabeceraMovimiento>(this.detach_CabeceraMovimiento));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CLIENTE_ID
		{
			get
			{
				return this._CLIENTE_ID;
			}
			set
			{
				if ((this._CLIENTE_ID != value))
				{
					this.OnCLIENTE_IDChanging(value);
					this.SendPropertyChanging();
					this._CLIENTE_ID = value;
					this.SendPropertyChanged("CLIENTE_ID");
					this.OnCLIENTE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTE_NOMBRE", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CLIENTE_NOMBRE
		{
			get
			{
				return this._CLIENTE_NOMBRE;
			}
			set
			{
				if ((this._CLIENTE_NOMBRE != value))
				{
					this.OnCLIENTE_NOMBREChanging(value);
					this.SendPropertyChanging();
					this._CLIENTE_NOMBRE = value;
					this.SendPropertyChanged("CLIENTE_NOMBRE");
					this.OnCLIENTE_NOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTE_CONTACTO", DbType="NVarChar(255)")]
		public string CLIENTE_CONTACTO
		{
			get
			{
				return this._CLIENTE_CONTACTO;
			}
			set
			{
				if ((this._CLIENTE_CONTACTO != value))
				{
					this.OnCLIENTE_CONTACTOChanging(value);
					this.SendPropertyChanging();
					this._CLIENTE_CONTACTO = value;
					this.SendPropertyChanged("CLIENTE_CONTACTO");
					this.OnCLIENTE_CONTACTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_CabeceraMovimiento", Storage="_CabeceraMovimiento", ThisKey="CLIENTE_ID", OtherKey="CAB_CLIENTE_ID")]
		public EntitySet<CabeceraMovimiento> CabeceraMovimiento
		{
			get
			{
				return this._CabeceraMovimiento;
			}
			set
			{
				this._CabeceraMovimiento.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CabeceraMovimiento(CabeceraMovimiento entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_CabeceraMovimiento(CabeceraMovimiento entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetalleMovimiento")]
	public partial class DetalleMovimiento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DET_ID;
		
		private int _DET_PROD_ID;
		
		private int _DET_CANTIDAD;
		
		private double _DET_PRECIO_UNITARIO;
		
		private double _DET_SUBTOTAL;
		
		private int _CAB_ID;
		
		private EntityRef<CabeceraMovimiento> _CabeceraMovimiento;
		
		private EntityRef<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDET_IDChanging(int value);
    partial void OnDET_IDChanged();
    partial void OnDET_PROD_IDChanging(int value);
    partial void OnDET_PROD_IDChanged();
    partial void OnDET_CANTIDADChanging(int value);
    partial void OnDET_CANTIDADChanged();
    partial void OnDET_PRECIO_UNITARIOChanging(double value);
    partial void OnDET_PRECIO_UNITARIOChanged();
    partial void OnDET_SUBTOTALChanging(double value);
    partial void OnDET_SUBTOTALChanged();
    partial void OnCAB_IDChanging(int value);
    partial void OnCAB_IDChanged();
    #endregion
		
		public DetalleMovimiento()
		{
			this._CabeceraMovimiento = default(EntityRef<CabeceraMovimiento>);
			this._Producto = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DET_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DET_ID
		{
			get
			{
				return this._DET_ID;
			}
			set
			{
				if ((this._DET_ID != value))
				{
					this.OnDET_IDChanging(value);
					this.SendPropertyChanging();
					this._DET_ID = value;
					this.SendPropertyChanged("DET_ID");
					this.OnDET_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DET_PROD_ID", DbType="Int NOT NULL")]
		public int DET_PROD_ID
		{
			get
			{
				return this._DET_PROD_ID;
			}
			set
			{
				if ((this._DET_PROD_ID != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDET_PROD_IDChanging(value);
					this.SendPropertyChanging();
					this._DET_PROD_ID = value;
					this.SendPropertyChanged("DET_PROD_ID");
					this.OnDET_PROD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DET_CANTIDAD", DbType="Int NOT NULL")]
		public int DET_CANTIDAD
		{
			get
			{
				return this._DET_CANTIDAD;
			}
			set
			{
				if ((this._DET_CANTIDAD != value))
				{
					this.OnDET_CANTIDADChanging(value);
					this.SendPropertyChanging();
					this._DET_CANTIDAD = value;
					this.SendPropertyChanged("DET_CANTIDAD");
					this.OnDET_CANTIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DET_PRECIO_UNITARIO", DbType="Float NOT NULL")]
		public double DET_PRECIO_UNITARIO
		{
			get
			{
				return this._DET_PRECIO_UNITARIO;
			}
			set
			{
				if ((this._DET_PRECIO_UNITARIO != value))
				{
					this.OnDET_PRECIO_UNITARIOChanging(value);
					this.SendPropertyChanging();
					this._DET_PRECIO_UNITARIO = value;
					this.SendPropertyChanged("DET_PRECIO_UNITARIO");
					this.OnDET_PRECIO_UNITARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DET_SUBTOTAL", DbType="Float NOT NULL")]
		public double DET_SUBTOTAL
		{
			get
			{
				return this._DET_SUBTOTAL;
			}
			set
			{
				if ((this._DET_SUBTOTAL != value))
				{
					this.OnDET_SUBTOTALChanging(value);
					this.SendPropertyChanging();
					this._DET_SUBTOTAL = value;
					this.SendPropertyChanged("DET_SUBTOTAL");
					this.OnDET_SUBTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAB_ID", DbType="Int NOT NULL")]
		public int CAB_ID
		{
			get
			{
				return this._CAB_ID;
			}
			set
			{
				if ((this._CAB_ID != value))
				{
					if (this._CabeceraMovimiento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCAB_IDChanging(value);
					this.SendPropertyChanging();
					this._CAB_ID = value;
					this.SendPropertyChanged("CAB_ID");
					this.OnCAB_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CabeceraMovimiento_DetalleMovimiento", Storage="_CabeceraMovimiento", ThisKey="CAB_ID", OtherKey="CAB_ID", IsForeignKey=true)]
		public CabeceraMovimiento CabeceraMovimiento
		{
			get
			{
				return this._CabeceraMovimiento.Entity;
			}
			set
			{
				CabeceraMovimiento previousValue = this._CabeceraMovimiento.Entity;
				if (((previousValue != value) 
							|| (this._CabeceraMovimiento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CabeceraMovimiento.Entity = null;
						previousValue.DetalleMovimiento.Remove(this);
					}
					this._CabeceraMovimiento.Entity = value;
					if ((value != null))
					{
						value.DetalleMovimiento.Add(this);
						this._CAB_ID = value.CAB_ID;
					}
					else
					{
						this._CAB_ID = default(int);
					}
					this.SendPropertyChanged("CabeceraMovimiento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_DetalleMovimiento", Storage="_Producto", ThisKey="DET_PROD_ID", OtherKey="PROD_ID", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.DetalleMovimiento.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.DetalleMovimiento.Add(this);
						this._DET_PROD_ID = value.PROD_ID;
					}
					else
					{
						this._DET_PROD_ID = default(int);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producto")]
	public partial class Producto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PROD_ID;
		
		private string _PROD_NOMBRE;
		
		private string _PROD_DECRIPCION;
		
		private double _PROD_PRECIO;
		
		private int _PROD_CANTIDAD;
		
		private string _PROD_ESTAD;
		
		private int _PROV_ID;
		
		private EntitySet<DetalleMovimiento> _DetalleMovimiento;
		
		private EntityRef<Proveedor> _Proveedor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPROD_IDChanging(int value);
    partial void OnPROD_IDChanged();
    partial void OnPROD_NOMBREChanging(string value);
    partial void OnPROD_NOMBREChanged();
    partial void OnPROD_DECRIPCIONChanging(string value);
    partial void OnPROD_DECRIPCIONChanged();
    partial void OnPROD_PRECIOChanging(double value);
    partial void OnPROD_PRECIOChanged();
    partial void OnPROD_CANTIDADChanging(int value);
    partial void OnPROD_CANTIDADChanged();
    partial void OnPROD_ESTADChanging(string value);
    partial void OnPROD_ESTADChanged();
    partial void OnPROV_IDChanging(int value);
    partial void OnPROV_IDChanged();
    #endregion
		
		public Producto()
		{
			this._DetalleMovimiento = new EntitySet<DetalleMovimiento>(new Action<DetalleMovimiento>(this.attach_DetalleMovimiento), new Action<DetalleMovimiento>(this.detach_DetalleMovimiento));
			this._Proveedor = default(EntityRef<Proveedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PROD_ID
		{
			get
			{
				return this._PROD_ID;
			}
			set
			{
				if ((this._PROD_ID != value))
				{
					this.OnPROD_IDChanging(value);
					this.SendPropertyChanging();
					this._PROD_ID = value;
					this.SendPropertyChanged("PROD_ID");
					this.OnPROD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_NOMBRE", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PROD_NOMBRE
		{
			get
			{
				return this._PROD_NOMBRE;
			}
			set
			{
				if ((this._PROD_NOMBRE != value))
				{
					this.OnPROD_NOMBREChanging(value);
					this.SendPropertyChanging();
					this._PROD_NOMBRE = value;
					this.SendPropertyChanged("PROD_NOMBRE");
					this.OnPROD_NOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_DECRIPCION", DbType="NVarChar(MAX)")]
		public string PROD_DECRIPCION
		{
			get
			{
				return this._PROD_DECRIPCION;
			}
			set
			{
				if ((this._PROD_DECRIPCION != value))
				{
					this.OnPROD_DECRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._PROD_DECRIPCION = value;
					this.SendPropertyChanged("PROD_DECRIPCION");
					this.OnPROD_DECRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_PRECIO", DbType="Float NOT NULL")]
		public double PROD_PRECIO
		{
			get
			{
				return this._PROD_PRECIO;
			}
			set
			{
				if ((this._PROD_PRECIO != value))
				{
					this.OnPROD_PRECIOChanging(value);
					this.SendPropertyChanging();
					this._PROD_PRECIO = value;
					this.SendPropertyChanged("PROD_PRECIO");
					this.OnPROD_PRECIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_CANTIDAD", DbType="Int NOT NULL")]
		public int PROD_CANTIDAD
		{
			get
			{
				return this._PROD_CANTIDAD;
			}
			set
			{
				if ((this._PROD_CANTIDAD != value))
				{
					this.OnPROD_CANTIDADChanging(value);
					this.SendPropertyChanging();
					this._PROD_CANTIDAD = value;
					this.SendPropertyChanged("PROD_CANTIDAD");
					this.OnPROD_CANTIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROD_ESTAD", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PROD_ESTAD
		{
			get
			{
				return this._PROD_ESTAD;
			}
			set
			{
				if ((this._PROD_ESTAD != value))
				{
					this.OnPROD_ESTADChanging(value);
					this.SendPropertyChanging();
					this._PROD_ESTAD = value;
					this.SendPropertyChanged("PROD_ESTAD");
					this.OnPROD_ESTADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROV_ID", DbType="Int NOT NULL")]
		public int PROV_ID
		{
			get
			{
				return this._PROV_ID;
			}
			set
			{
				if ((this._PROV_ID != value))
				{
					if (this._Proveedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPROV_IDChanging(value);
					this.SendPropertyChanging();
					this._PROV_ID = value;
					this.SendPropertyChanged("PROV_ID");
					this.OnPROV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_DetalleMovimiento", Storage="_DetalleMovimiento", ThisKey="PROD_ID", OtherKey="DET_PROD_ID")]
		public EntitySet<DetalleMovimiento> DetalleMovimiento
		{
			get
			{
				return this._DetalleMovimiento;
			}
			set
			{
				this._DetalleMovimiento.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_Producto", Storage="_Proveedor", ThisKey="PROV_ID", OtherKey="PROV_ID", IsForeignKey=true)]
		public Proveedor Proveedor
		{
			get
			{
				return this._Proveedor.Entity;
			}
			set
			{
				Proveedor previousValue = this._Proveedor.Entity;
				if (((previousValue != value) 
							|| (this._Proveedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedor.Entity = null;
						previousValue.Producto.Remove(this);
					}
					this._Proveedor.Entity = value;
					if ((value != null))
					{
						value.Producto.Add(this);
						this._PROV_ID = value.PROV_ID;
					}
					else
					{
						this._PROV_ID = default(int);
					}
					this.SendPropertyChanged("Proveedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleMovimiento(DetalleMovimiento entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_DetalleMovimiento(DetalleMovimiento entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Proveedor")]
	public partial class Proveedor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PROV_ID;
		
		private string _PROV_NOMBRE;
		
		private string _PROV_CONTACTO;
		
		private EntitySet<CabeceraMovimiento> _CabeceraMovimiento;
		
		private EntitySet<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPROV_IDChanging(int value);
    partial void OnPROV_IDChanged();
    partial void OnPROV_NOMBREChanging(string value);
    partial void OnPROV_NOMBREChanged();
    partial void OnPROV_CONTACTOChanging(string value);
    partial void OnPROV_CONTACTOChanged();
    #endregion
		
		public Proveedor()
		{
			this._CabeceraMovimiento = new EntitySet<CabeceraMovimiento>(new Action<CabeceraMovimiento>(this.attach_CabeceraMovimiento), new Action<CabeceraMovimiento>(this.detach_CabeceraMovimiento));
			this._Producto = new EntitySet<Producto>(new Action<Producto>(this.attach_Producto), new Action<Producto>(this.detach_Producto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROV_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PROV_ID
		{
			get
			{
				return this._PROV_ID;
			}
			set
			{
				if ((this._PROV_ID != value))
				{
					this.OnPROV_IDChanging(value);
					this.SendPropertyChanging();
					this._PROV_ID = value;
					this.SendPropertyChanged("PROV_ID");
					this.OnPROV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROV_NOMBRE", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PROV_NOMBRE
		{
			get
			{
				return this._PROV_NOMBRE;
			}
			set
			{
				if ((this._PROV_NOMBRE != value))
				{
					this.OnPROV_NOMBREChanging(value);
					this.SendPropertyChanging();
					this._PROV_NOMBRE = value;
					this.SendPropertyChanged("PROV_NOMBRE");
					this.OnPROV_NOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROV_CONTACTO", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PROV_CONTACTO
		{
			get
			{
				return this._PROV_CONTACTO;
			}
			set
			{
				if ((this._PROV_CONTACTO != value))
				{
					this.OnPROV_CONTACTOChanging(value);
					this.SendPropertyChanging();
					this._PROV_CONTACTO = value;
					this.SendPropertyChanged("PROV_CONTACTO");
					this.OnPROV_CONTACTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_CabeceraMovimiento", Storage="_CabeceraMovimiento", ThisKey="PROV_ID", OtherKey="PROV_ID")]
		public EntitySet<CabeceraMovimiento> CabeceraMovimiento
		{
			get
			{
				return this._CabeceraMovimiento;
			}
			set
			{
				this._CabeceraMovimiento.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_Producto", Storage="_Producto", ThisKey="PROV_ID", OtherKey="PROV_ID")]
		public EntitySet<Producto> Producto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				this._Producto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CabeceraMovimiento(CabeceraMovimiento entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = this;
		}
		
		private void detach_CabeceraMovimiento(CabeceraMovimiento entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = null;
		}
		
		private void attach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = this;
		}
		
		private void detach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _USU_ID;
		
		private string _USU_NOMBRE;
		
		private string _USU_CONTRASEÑA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSU_IDChanging(int value);
    partial void OnUSU_IDChanged();
    partial void OnUSU_NOMBREChanging(string value);
    partial void OnUSU_NOMBREChanged();
    partial void OnUSU_CONTRASEÑAChanging(string value);
    partial void OnUSU_CONTRASEÑAChanged();
    #endregion
		
		public Usuario()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USU_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int USU_ID
		{
			get
			{
				return this._USU_ID;
			}
			set
			{
				if ((this._USU_ID != value))
				{
					this.OnUSU_IDChanging(value);
					this.SendPropertyChanging();
					this._USU_ID = value;
					this.SendPropertyChanged("USU_ID");
					this.OnUSU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USU_NOMBRE", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string USU_NOMBRE
		{
			get
			{
				return this._USU_NOMBRE;
			}
			set
			{
				if ((this._USU_NOMBRE != value))
				{
					this.OnUSU_NOMBREChanging(value);
					this.SendPropertyChanging();
					this._USU_NOMBRE = value;
					this.SendPropertyChanged("USU_NOMBRE");
					this.OnUSU_NOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USU_CONTRASEÑA", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string USU_CONTRASEÑA
		{
			get
			{
				return this._USU_CONTRASEÑA;
			}
			set
			{
				if ((this._USU_CONTRASEÑA != value))
				{
					this.OnUSU_CONTRASEÑAChanging(value);
					this.SendPropertyChanging();
					this._USU_CONTRASEÑA = value;
					this.SendPropertyChanged("USU_CONTRASEÑA");
					this.OnUSU_CONTRASEÑAChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
